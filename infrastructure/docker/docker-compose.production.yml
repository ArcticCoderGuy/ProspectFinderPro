# Production docker compose configuration

version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: ${SQL_SA_PASSWORD}
      ACCEPT_EULA: "Y"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${SQL_SA_PASSWORD}" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api-gateway:
    build:
      context: ../../
      dockerfile: src/Services/ProspectFinderPro.ApiGateway/Dockerfile
      target: production
    ports:
      - "${API_PORT:-5000}:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: ${DATABASE_URL}
      Redis__ConnectionString: ${REDIS_URL}
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  webapp:
    build:
      context: ../../
      dockerfile: src/Services/ProspectFinderPro.WebApp/Dockerfile
      target: production
    ports:
      - "${WEB_PORT:-5001}:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ApiBaseUrl: http://api-gateway:8080
    depends_on:
      api-gateway:
        condition: service_healthy
    restart: unless-stopped

volumes:
  sqlserver_data: